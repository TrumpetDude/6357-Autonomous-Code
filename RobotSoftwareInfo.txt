We are going to write our robot software in Java and run it on the RoboRIO. First, all software folks will need a GitHub account to be able to contribute to the code. All code will be checked into our GitHub account if it ends up on the robot. The GitHub account is free.To make a GitHub account, go here: https://github.com/And request to be added to the vision project here: https://github.com/frc6357/robot_code To make this request, create an issue in the repository and tell us who you are. You will then be added to the project.Of course, you now need to learn to use Git. So, have a look at this overview tutorial:https://www.youtube.com/watch?v=0fKg7e37bQERobot code is developed in Eclipse using a library called WPILib. The FRC Java Resources are located here: https://wpilib.screenstepslive.com/s/4485/m/13809You are strongly encouraged to have a development environment, the source code, and git on a personal computer. There’s nothing stopping you from working on code on your own computer, since we can merge everything together via Git. We will have at least one dedicated computer to work with at meetings and at the events.I’ll be putting together a series of screen capture videos explaining how to write good robot code. But, in the meantime, please see the following videos:If you already know Java programming, skip this paragraph. This might seem strange, but you don’t need most of the “traditional” Java examples. You’re free to try the typical examples on your own, but focus on syntax, logic, and objects. There are many YouTube resources for learning Java and all will be of some help. Here’s a playlist you can try. If you use that playlist, focus on 8 through 22.After you’ve gotten a grasp of how to write Java code, have a look at the SOLID principles of object oriented design: https://www.youtube.com/playlist?list=PLs8F9-fy20QQ3UcgiFCcoyhXn5T0bq_3GDon’t feel that you need complete mastery of these ideas. Just focus on your exposure to the concepts and try to practice some with the ideas. Don’t be afraid to make mistakes. We’ll be working through some real detailed development when we make this robot happen.And for some practical stuff, here’s a playlist (currently partial) of how to do a lift in Java for FRC:https://www.youtube.com/playlist?list=PLwaVA5N1hHQjzegO1OKo31tiFKz35x-eg